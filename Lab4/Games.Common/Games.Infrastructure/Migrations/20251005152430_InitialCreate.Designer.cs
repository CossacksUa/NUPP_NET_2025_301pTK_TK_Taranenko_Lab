// <auto-generated />
using System;
using Games.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Games.Infrastructure.Migrations
{
    [DbContext(typeof(GamesContext))]
    [Migration("20251005152430_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("Games.Infrastructure.Models.DeveloperModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("DeveloperName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("FoundedYear")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Developers");
                });

            modelBuilder.Entity("Games.Infrastructure.Models.GameDetailsModel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AdditionalInfo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GameDetails");
                });

            modelBuilder.Entity("Games.Infrastructure.Models.GameDeveloperModel", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DeveloperId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GameId", "DeveloperId");

                    b.HasIndex("DeveloperId");

                    b.ToTable("GameDevelopers");
                });

            modelBuilder.Entity("Games.Infrastructure.Models.GameModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<Guid?>("PublisherId")
                        .HasColumnType("TEXT");

                    b.Property<double>("Rating")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("Games", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Games.Infrastructure.Models.PublisherModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PublisherName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("Games.Infrastructure.Models.ConsoleGameModel", b =>
                {
                    b.HasBaseType("Games.Infrastructure.Models.GameModel");

                    b.Property<string>("ConsoleType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhysicalCopyAvailable")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.ToTable("ConsoleGames", (string)null);
                });

            modelBuilder.Entity("Games.Infrastructure.Models.PCGameModel", b =>
                {
                    b.HasBaseType("Games.Infrastructure.Models.GameModel");

                    b.Property<string>("MinimumRequirements")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RecommendedRequirements")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("PCGames", (string)null);
                });

            modelBuilder.Entity("Games.Infrastructure.Models.GameDetailsModel", b =>
                {
                    b.HasOne("Games.Infrastructure.Models.GameModel", "Game")
                        .WithOne("Details")
                        .HasForeignKey("Games.Infrastructure.Models.GameDetailsModel", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Games.Infrastructure.Models.GameDeveloperModel", b =>
                {
                    b.HasOne("Games.Infrastructure.Models.DeveloperModel", "Developer")
                        .WithMany("GameDevelopers")
                        .HasForeignKey("DeveloperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Games.Infrastructure.Models.GameModel", "Game")
                        .WithMany("GameDevelopers")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Developer");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Games.Infrastructure.Models.GameModel", b =>
                {
                    b.HasOne("Games.Infrastructure.Models.PublisherModel", "Publisher")
                        .WithMany("Games")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("Games.Infrastructure.Models.ConsoleGameModel", b =>
                {
                    b.HasOne("Games.Infrastructure.Models.GameModel", null)
                        .WithOne()
                        .HasForeignKey("Games.Infrastructure.Models.ConsoleGameModel", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Games.Infrastructure.Models.PCGameModel", b =>
                {
                    b.HasOne("Games.Infrastructure.Models.GameModel", null)
                        .WithOne()
                        .HasForeignKey("Games.Infrastructure.Models.PCGameModel", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Games.Infrastructure.Models.DeveloperModel", b =>
                {
                    b.Navigation("GameDevelopers");
                });

            modelBuilder.Entity("Games.Infrastructure.Models.GameModel", b =>
                {
                    b.Navigation("Details")
                        .IsRequired();

                    b.Navigation("GameDevelopers");
                });

            modelBuilder.Entity("Games.Infrastructure.Models.PublisherModel", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
